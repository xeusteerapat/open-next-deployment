import Head from 'next/head';
import { Container, Button } from '@mantine/core';
import { getSignedUrl } from '@aws-sdk/s3-request-presigner';
import { S3Client, PutObjectCommand } from '@aws-sdk/client-s3';
import { randomUUID } from 'crypto';
import { Bucket } from 'sst/node/bucket';

export default function Home({ url }: { url: string }) {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Container>
        <h2>Hello Next.js ❤️ SST</h2>
        <main>
          <form
            onSubmit={async e => {
              e.preventDefault();

              const file = (e.target as HTMLFormElement).file.files?.[0]!;

              const image = await fetch(url, {
                body: file,
                method: 'PUT',
                headers: {
                  'Content-Type': file.type,
                  'Content-Disposition': `attachment; filename="${file.name}"`,
                },
              });

              window.location.href = image.url.split('?')[0];
            }}
          >
            <input name='file' type='file' accept='image/png, image/jpeg' />
            <Button type='submit'>Upload</Button>
          </form>
        </main>
      </Container>
    </>
  );
}

export async function getServerSideProps() {
  const command = new PutObjectCommand({
    ACL: 'public-read',
    Key: randomUUID(),
    Bucket: Bucket.public.bucketName,
  });

  const url = await getSignedUrl(new S3Client({}), command);

  return {
    props: {
      url,
    },
  };
}
